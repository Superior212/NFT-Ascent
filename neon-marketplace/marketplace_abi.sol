/**
 * This file was automatically generated by Stylus and represents a Rust program.
 * For more information, please see [The Stylus SDK](https://github.com/OffchainLabs/stylus-sdk-rs).
 */

// SPDX-License-Identifier: INeonMarketplace
solidity

interface INeonMarketplace  {
    function initialize(uint256 platform_fee_percentage) external;

    function createAuction(address nft_contract, uint256 token_id, uint256 reserve_price, uint256 duration) external returns (uint256);

    function cancelAuction(uint256 auction_id) external;

    function placeBid(uint256 auction_id) external payable;

    function settleAuction(uint256 auction_id) external;

    function updatePlatformFee(uint256 new_fee_percentage) external;

    function withdraw() external;

    function getAuction(uint256 auction_id) external view returns (address, uint256, address, uint256, uint256, address, uint256, bool);

    function isAuctionActive(uint256 auction_id) external view returns (bool);

    function getBalance(address user_address) external view returns (uint256);

    function getNextAuctionId() external view returns (uint256);

    function getPlatformFee() external view returns (uint256);

    function getPlatformOwner() external view returns (address);

    function getTokenCollectionInfo(address nft_contract, uint256 token_id) external view returns (uint256, string memory, string memory, address);

    function getPlatformFeePercentage() external view returns (uint256);

    error AlreadyInitialized();

    error AuctionNotFound();

    error AuctionNotActive();

    error BidTooLow();

    error AuctionNotEnded();

    error AuctionAlreadySettled();

    error NotTokenOwner();

    error NotAuctionSeller();

    error NotPlatformOwner();

    error InsufficientBalance();

    error TransferFailed();

    error AuctionHasBids();

    error InvalidDuration();

    error InvalidReservePrice();

    error InvalidFeePercentage();

    error ERC721InvalidTokenId();

    error NotApprovedForTransfer();
}
